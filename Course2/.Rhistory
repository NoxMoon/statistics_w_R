library(statsr)
library(dplyr)
library(ggplot2)
data(ames)
n <- 60
samp <- sample_n(ames, n)
n <- 60
samp <- sample_n(ames, n)
samp
# type your code for the Exercise here, and Knit
ggplot(samp, aes(area)) + geom_histogram()
z_star_95 <- qnorm(0.975)
z_star_95
samp %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
params <- ames %>%
summarise(mu = mean(area))
# type your code for the Exercise here, and Knit
params
# type your code for the Exercise here, and Knit
params
ci <- ames %>%
rep_sample_n(size = n, reps = 50, replace = TRUE) %>%
summarise(lower = mean(area) - z_star_95 * (sd(area) / sqrt(n)),
upper = mean(area) + z_star_95 * (sd(area) / sqrt(n)))
ci %>%
slice(1:5)
ci <- ci %>%
mutate(capture_mu = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
ci <- ci %>%
mutate(capture_mu = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
ci <- ci %>%
mutate(capture_mu = ifelse(lower < params$mu & upper > params$mu, "yes", "no"))
ci_data <- data.frame(ci_id = c(1:50, 1:50),
ci_bounds = c(ci$lower, ci$upper),
capture_mu = c(ci$capture_mu, ci$capture_mu))
ggplot(data = ci_data, aes(x = ci_bounds, y = ci_id,
group = ci_id, color = capture_mu)) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkgray") # draw vertical line
ci_data <- data.frame(ci_id = c(1:50, 1:50),
ci_bounds = c(ci$lower, ci$upper),
capture_mu = c(ci$capture_mu, ci$capture_mu))
ci_data
ggplot(data = ci_data, aes(x = ci_bounds, y = ci_id,
color = capture_mu)) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkgray") # draw vertical line
ggplot(data = ci_data, aes(x = ci_bounds, y = ci_id,
group = ci_id, color = capture_mu)) +
geom_point(size = 2) +  # add points at the ends, size = 2
geom_line() +           # connect with lines
geom_vline(xintercept = params$mu, color = "darkgray") # draw vertical line
# type your code for the Question 5 here, and Knit
qnorm(0.995)
# type your code for the Exercise here, and Knit
ci
# type your code for the Exercise here, and Knit
ci_95 <- ames %>%
rep_sample_n(size = n, reps = 50, replace = TRUE) %>%
summarize(lower = mean(area) + 2.575829 * sd(area)/sqrt(n),
upper = mean(area) - 2.575829 * sd(area)/sqrt(n))
ci_95
# type your code for the Exercise here, and Knit
ci_95 <- ames %>%
rep_sample_n(size = n, reps = 50, replace = TRUE) %>%
summarize(lower = mean(area) + 2.575829 * sd(area)/sqrt(n),
upper = mean(area) - 2.575829 * sd(area)/sqrt(n))
ci_95 <- ci_95 %>%
mutate(capture_mu = ifelse(lower<params$mu & upper>params$mu, "Yes", "NO"))
ci_95
# type your code for the Exercise here, and Knit
ci_95 <- ames %>%
rep_sample_n(size = n, reps = 50, replace = TRUE) %>%
summarize(lower = mean(area) - 2.575829 * sd(area)/sqrt(n),
upper = mean(area) + 2.575829 * sd(area)/sqrt(n))
ci_95 <- ci_95 %>%
mutate(capture_mu = ifelse(lower<params$mu & upper>params$mu, "Yes", "NO"))
ci_95
# type your code for the Exercise here, and Knit
ci_95 <- ames %>%
rep_sample_n(size = n, reps = 50, replace = TRUE) %>%
summarize(lower = mean(area) - 2.575829 * sd(area)/sqrt(n),
upper = mean(area) + 2.575829 * sd(area)/sqrt(n))
ci_95 <- ci_95 %>%
mutate(capture_mu = ifelse(lower<params$mu & upper>params$mu, "Yes", "NO"))
# type your code for the Exercise here, and Knit
ci_95 <- ames %>%
rep_sample_n(size = n, reps = 50, replace = TRUE) %>%
summarize(lower = mean(area) - 2.575829 * sd(area)/sqrt(n),
upper = mean(area) + 2.575829 * sd(area)/sqrt(n))
ci_95 <- ci_95 %>%
mutate(capture_mu = ifelse(lower<params$mu & upper>params$mu, "Yes", "NO"))
ci_95
ci_95_data <- data.frame(ci_id = c(1:50, 1:50),
ci_bounds = c(ci_95$lower, ci_95$upper),
capture_mu = c(ci_95$capture_mu, ci_95$capture_mu))
ggplot(ci_95_data, aes(x=ci_bounds, y=ci_id, group=ci_id, color=capture_mu)) +
geom_point() +
geom_line() +
geom_vline(xintercept = params$mu)
ci_95_data <- data.frame(ci_id = c(1:50, 1:50),
ci_bounds = c(ci_95$lower, ci_95$upper),
capture_mu = c(ci_95$capture_mu, ci_95$capture_mu))
ggplot(ci_95_data, aes(x=ci_bounds, y=ci_id, group=ci_id, color=capture_mu)) +
geom_point(size=2) +
geom_line() +
geom_vline(xintercept = params$mu)
library(statsr)
library(dplyr)
library(ggplot2)
data(nc)
pf(75/40)
data(nc)
pf(75/40, 7, 189)
data(nc)
pf(75/40, 7, 189, lower.tail = FALSE)
data(nc)
sqrt(3.4*3.4/18+2.7*2.7/18)
data(nc)
pnorm(2.5, 19)
data(nc)
pnorm(2.5)
library(statsr)
library(dplyr)
library(ggplot2)
data(nc)
str(nc)
summary(nc$gained)
summary(nc$gained)
# type your code for the Question 3 here, and Knit
ggplot(nc, aes(x=habit, y=weight)) + geom_boxplot()
nc %>%
group_by(habit) %>%
summarise(mean_weight = mean(weight))
nc %>% group_by(habit) %>%
summarise(count = n(weight))
nc %>% group_by(habit) %>%
summarise(count = n())
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ht", null = 0,
alternative = "twosided", method = "theoretical")
nc %>%
group_by(habit) %>%
summarise(mean_weight = mean(weight), sd=sd(weight))
nc %>%
group_by(habit) %>%
summarise(mean_weight = mean(weight), sd=sd(weight), count=n())
SE = sqrt(1.518681^2/873 + 1.386180^2/126)
t = (7.144273 - 6.828730)/SE
SE = sqrt(1.518681^2/873 + 1.386180^2/126)
t = (7.144273 - 6.828730)/SE
pt(t, 125)
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ht", null = 0,
alternative = "twosided", method = "theoretical")
# type your code for the Question 5 here, and Knit
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci", null = 0,
alternative = "twosided", method = "theoretical")
SE = sqrt(1.518681^2/873 + 1.386180^2/126)
t = (7.144273 - 6.828730)/SE
pt(t, 125, lower.tail = False)
SE = sqrt(1.518681^2/873 + 1.386180^2/126)
t = (7.144273 - 6.828730)/SE
pt(t, 125, lower.tail = FALSE)
SE = sqrt(1.518681^2/873 + 1.386180^2/126)
t = (7.144273 - 6.828730)/SE
2*pt(t, 125, lower.tail = FALSE)
SE = sqrt(1.518681^2/873 + 1.386180^2/126)
t = (7.144273 - 6.828730)/SE
2*pt(t, 125, lower.tail = FALSE)
# type your code for the Question 5 here, and Knit
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci", null = 0,
conf_level = '0.95', alternative = "twosided", method = "theoretical")
# type your code for the Question 5 here, and Knit
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci", null = 0,
conf_level = 0.95, alternative = "twosided", method = "theoretical")
SE = sqrt(1.518681^2/873 + 1.386180^2/126)
xdiff = 7.144273 - 6.828730
t = (xdiff)/SE
p_value = 2*pt(t, 125, lower.tail = FALSE)
p_value
t_ = qt(0.975, 125)
ci = c(xdiff-t_*SE, xdiff+t_*SE)
ci
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci",
method = "theoretical", order = c("smoker","nonsmoker"))
# type your code for Question 6 here, and Knit
inference(y=weeks, data=nc, statistic="mean", type='ci', conf_level=0.99, method=theoretical)
# type your code for Question 6 here, and Knit
inference(y=weeks, data=nc, statistic="mean", type='ci', conf_level=0.99, method="theoretical")
# type your code for the Exercise here, and Knit
inference(y=weeks, data=nc, statistic="mean", type='ci', conf_level=0.98, method="theoretical")
# type your code for the Exercise here, and Knit
inference(y=weight, x=mature, data=nc, type='hc', statistic="mean", method="theoretical")
# type your code for the Exercise here, and Knit
inference(y=weight, x=mature, data=nc, type='ht', statistic="mean", method="theoretical")
# type your code for the Exercise here, and Knit
inference(y=weight, x=mature, data=nc, type='ht', statistic="mean", method="theoretical", alternative="twosided")
# type your code for the Exercise here, and Knit
inference(y=gained, x=mature, data=nc, type='ht', statistic="mean", method="theoretical", alternative="twosided")
# type your code for the Exercise here, and Knit
inference(y=lowbirthweight, x=gender, data=nc, statistic="mean", type="hc",
conf_level=0.95,alternative="twosided",method="theoretical")
# type your code for the Exercise here, and Knit
inference(y=lowbirthweight, x=gender, data=nc, statistic="mean", type="ht",
conf_level=0.95,alternative="twosided",method="theoretical")
# type your code for the Exercise here, and Knit
inference(y=gained, x=gender, data=nc, statistic="mean", type="ht",
conf_level=0.95,alternative="twosided",method="theoretical")
# type your code for the Exercise here, and Knit
inference(y=gained, x=gender, data=nc, statistic="mean", type="ci",
conf_level=0.95,alternative="twosided",method="theoretical")
# type your code for Question 7 here, and Knit
nc %>% group_by(mage) %>%
summarise(n())
# type your code for Question 7 here, and Knit
nc %>% group_by(mage) %>%
summarise(cumn())
# type your code for Question 7 here, and Knit
nc %>% group_by(mage) %>%
summarise(n())
# type your code for Question 7 here, and Knit
nc %>% group_by(mage) %>%
summarise(count=n()) %>%
cumsum(count)
# type your code for Question 7 here, and Knit
nc %>% group_by(mage) %>%
summarise(count=n()) %>%
cumsum(count)
# type your code for Question 7 here, and Knit
nc %>% group_by(mage) %>%
summarise(cnt=n()) %>%
cumsum(cnt)
# type your code for Question 7 here, and Knit
nc %>% group_by(mage) %>%
summarise(cnt=n()) %>%
#cumsum(cnt)
# type your code for Question 7 here, and Knit
nc %>% group_by(mage) %>%
summarise(cnt=n()) #%>%
#cumsum(cnt)
# type your code for Question 7 here, and Knit
df = nc %>% group_by(mage) %>%
summarise(cnt=n()) %>%
df$cumcnt = cumsum(df$cnt)
# type your code for Question 7 here, and Knit
df = nc %>% group_by(mage) %>%
summarise(cnt=n()) %>%
df$cumcnt <- cumsum(df$cnt)
# type your code for Question 7 here, and Knit
df <- nc %>% group_by(mage) %>%
summarise(cnt=n()) %>%
#df$cumcnt <- cumsum(df$cnt)
df
# type your code for Question 7 here, and Knit
df <- nc %>% group_by(mage) %>%
summarise(cnt=n())
#df$cumcnt <- cumsum(df$cnt)
df
# type your code for Question 7 here, and Knit
df <- nc %>% group_by(mage) %>%
summarise(cnt=n())
df$cumcnt <- cumsum(df$cnt)
df
# type your code for Question 7 here, and Knit
df <- nc %>% group_by(mage) %>%
summarise(cnt=n())
df$cumcnt <- cumsum(df$cnt)
df
28.7907 + 1.96 * 13.4824/sqrt(129)
# type your code for Question 7 here, and Knit
df <- nc %>% group_by(mage) %>%
summarise(cnt=n())
df$cumcnt <- cumsum(df$cnt)
df
28.7907 + qt(0.975, 129) * 13.4824/sqrt(129)
# type your code for Question 7 here, and Knit
df <- nc %>% group_by(mage) %>%
summarise(cnt=n())
df$cumcnt <- cumsum(df$cnt)
df
qt(0.975, 129)
28.7907 + qt(0.975, 129) * 13.4824/sqrt(129)
# type your code for Question 7 here, and Knit
df <- nc %>% group_by(mage) %>%
summarise(cnt=n())
df$cumcnt <- cumsum(df$cnt)
df
#qt(0.975, 129)
#28.7907 + qt(0.975, 129) * 13.4824/sqrt(129)
# type your code for Question 7 here, and Knit
df <- nc %>% group_by(mage) %>%
summarise(cnt=n())
df$cumcnt <- cumsum(df$cnt)
df
library(statsr)
library(dplyr)
library(ggplot2)
data(atheism)
data(atheism)
atheism
data(atheism)
us12 <- atheism %>%
filter(nationality == "United States" , atheism$year == "2012")
# type your code for Question 7 here, and Knit
us12
# type your code for Question 7 here, and Knit
table(us12$response)
# type your code for Question 7 here, and Knit
table(us12$response) / count(us12$response)
# type your code for Question 7 here, and Knit
table(us12$response) / n(us12$response)
# type your code for Question 7 here, and Knit
table(us12$response) / nrow(us12$response)
# type your code for Question 7 here, and Knit
table(us12$response)
nrow(us12$response)
# type your code for Question 7 here, and Knit
table(us12$response)
nrow(us12)
# type your code for Question 7 here, and Knit
table(us12$response) / nrow(us12)
# type your code for Question 7 here, and Knit
n = nrow(us12)
table(us12$response) / n
p = 0.0499002
SE = sqrt(p*(1-p)/n)
1.96*SE
inference(y = response, data = us12, statistic = "proportion", type = "ci", method = "theoretical", success = "atheist")
# type your code for Question 8 here, and Knit
p = 0.0499002
SE = sqrt(p*(1-p)/n)
margional_err = 1.96*SE
margional_err
# type your code for the Exercise here, and Knit
cn12 <- atheism %>%
filter(nationality=="China")
cn12
# type your code for the Exercise here, and Knit
cn12 <- atheism %>%
filter(nationality=="China")
#inference(y = response, data=c(us12, cn12))
c(us12, cn12)
# type your code for the Exercise here, and Knit
cn12 <- atheism %>%
filter(nationality=="China")
us_cn <- rbind(cn12, us12)
us_cn
#inference(y = response, x = nationality, data=, statistic = "proportion", type = "ci",
#          method = "theoretical", success = atheist)
# type your code for the Exercise here, and Knit
cn12 <- atheism %>%
filter(nationality=="China")
us_cn <- rbind(cn12, us12)
inference(y = response, x = nationality, data=us_cn, statistic = "proportion",
type = "ci", method = "theoretical", success = atheist)
# type your code for the Exercise here, and Knit
cn12 <- atheism %>%
filter(nationality=="China")
inference(y = response, data=cn12, statistic = "proportion",
type = "ci", method = "theoretical", success = atheist)
# type your code for the Exercise here, and Knit
cn12 <- atheism %>%
filter(nationality=="China")
inference(y = response, data=cn12, statistic = "proportion",
type = "ci", method = "theoretical", success = "atheist")
d <- data.frame(p <- seq(0, 1, 0.01))
n <- 1000
d <- d %>%
mutate(me = 1.96*sqrt(p*(1 - p)/n))
ggplot(d, aes(x = p, y = me)) +
geom_line()
# type your code for Question 10 here, and Knit
atheist
# type your code for Question 10 here, and Knit
atheism
# type your code for Question 10 here, and Knit
spain_05_12 <- atheism %>%
filter(nationality=="spain" & (year==2012 | year==2005))
spain_05_12
# type your code for Question 10 here, and Knit
spain_05_12 <- atheism %>%
filter(nationality=="spain")
spain_05_12
# type your code for Question 10 here, and Knit
spain_05_12 <- atheism %>%
filter(nationality=="Spain")
spain_05_12
# type your code for Question 10 here, and Knit
spain_05_12 <- atheism %>%
filter(nationality=="Spain")
table(spain_05_12$year)
# type your code for Question 10 here, and Knit
spain_05_12 <- atheism %>%
filter(nationality=="Spain" & (year==2012 | year==2005))
table(spain_05_12$year)
# type your code for Question 10 here, and Knit
spain_05_12 <- atheism %>%
filter(nationality=="Spain" & (year==2012 | year==2005))
table(spain_05_12$year)
# type your code for Question 10 here, and Knit
spain_05_12 <- atheism %>%
filter(nationality=="Spain")
inference(y = response, group = year, data = spain_05_12, statistic = "proportion",
type = "ci", method = "theoretical", success = "atheist")
# type your code for Question 10 here, and Knit
spain_05_12 <- atheism %>%
filter(nationality=="Spain")
inference(y = response, x = year, data = spain_05_12, statistic = "proportion",
type = "ci", method = "theoretical", success = "atheist", order = (2012, 2005))
# type your code for Question 10 here, and Knit
spain_05_12 <- atheism %>%
filter(nationality=="Spain")
inference(y = response, x = year, data = spain_05_12, statistic = "proportion",
type = "ci", method = "theoretical", success = "atheist",
order = c(2012, 2005))
# type your code for Question 11 here, and Knit
us12
# type your code for Question 11 here, and Knit
table(us12)
# type your code for Question 11 here, and Knit
table(us12$year)
# type your code for Question 11 here, and Knit
us_05_12 <- atheism %>%
filter(nationality=="Spain")
inference(y = response, x = year, data = spain_05_12, statistic = "proportion",
type = "ci", method = "theoretical", success = "atheist",
order = c(2012, 2005))
us12
# type your code for Question 11 here, and Knit
us_05_12 <- atheism %>%
filter(nationality=="United States")
inference(y = response, x = year, data = us_05_12, statistic = "proportion",
type = "ci", method = "theoretical", success = "atheist",
order = c(2012, 2005))
# type your code for Question 12 here, and Knit
# 39 countries in Table 4
39 * 0.05
# type your code for Question 13 here, and Knit
#0.01 = 1.96 * sqrt(0.5*(1-0.5)/n)
n = 0.25/(0.01/1.96)^2
# type your code for Question 13 here, and Knit
#0.01 = 1.96 * sqrt(0.5*(1-0.5)/n)
n = 0.25/(0.01/1.96)^2
n
View(us12)
